<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Go on VIBEC0RE</title><link>/tags/go/</link><description>Recent content in Go on VIBEC0RE</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Aug 2025 12:00:00 +0000</lastBuildDate><atom:link href="/tags/go/index.xml" rel="self" type="application/rss+xml"/><item><title>how viber00t actually fucking works: a technical deep dive for c0de witches</title><link>/posts/viber00t-deep-dive/</link><pubDate>Fri, 08 Aug 2025 12:00:00 +0000</pubDate><guid>/posts/viber00t-deep-dive/</guid><description>ðŸ§  HOW VIBER00T WORKS: THE FORBIDDEN KNOWLEDGE ðŸ§  &amp;ldquo;they said containers were complex. we said hold my beer.&amp;rdquo;
the architecture (if u can even call it that) 1YOU -&amp;gt; ./viber00t -&amp;gt; PODMAN -&amp;gt; CONTAINER -&amp;gt; CLAUDE UNLEASHED 2 | 3 v 4 go binary 5 (like 200 lines) thats it. thats the entire architecture diagram.
ðŸ’€ THE STACK ðŸ’€ written in go because: compiles to single binary (no npm install bullshit) fast as fuck no dependencies works everywhere rust wouldve been cooler but go is pragmatic chaos uses podman because: docker desktop is 4GB of electron trash podman is just linux doing linux things rootless by default (security through chaos) no daemon eating ur cpu works with existing docker images ðŸ”¥ HOW IT ACTUALLY WORKS (THE REAL SHIT) ðŸ”¥ step 1: u run .</description></item></channel></rss>